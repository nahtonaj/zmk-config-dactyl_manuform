/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
    behaviors {
        lh_pht: left_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <400>;                        // <---[[produces tap if held longer than tapping-term-ms]]
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 34 35 46 47 30 31 32 33 42 43 44 45 55 56 57 58 54 55>;    // <---[[right-hand keys]]
            hold-trigger-on-release;
            require-prior-idle-ms = <150>;
        };
    };

    behaviors {
        rh_pht: right_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <400>;                        // <---[[produces tap if held longer than tapping-term-ms]]
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <0 1 2 3 4 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 48 49 50 51 52 53>;    // <---[[right-hand keys]]
            hold-trigger-on-release;
            require-prior-idle-ms = <150>;
        };
    };

    // Activate ADJUST layer by pressing raise and lower

    conditional_layers { compatible = "zmk,conditional-layers"; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "default";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&lt 2 TAB      &kp Q                 &kp W               &kp E               &kp R                               &kp T                                                 &kp Y                         &kp U                      &kp I                &kp O                &kp P                          &kp BACKSLASH
&mt LCTRL ESC  &lh_pht LEFT_SHIFT A  &lh_pht LEFT_GUI S  &lh_pht LEFT_ALT D  &lh_pht LCTRL F                     &kp G                                                 &kp H                         &rh_pht RCTRL J            &rh_pht RIGHT_ALT K  &rh_pht RIGHT_GUI L  &rh_pht RIGHT_SHIFT SEMICOLON  &kp SQT
&kp LSHFT      &kp Z                 &kp X               &kp C               &kp V                               &kp B                                                 &kp N                         &kp M                      &kp COMMA            &kp DOT              &kp FSLH                       &kp RSHFT
                                     &kp NUBS            &kp A                                                                                                                                                                  &kp LEFT_BRACKET     &kp RIGHT_BRACKET
                                                                             &mt LEFT_SHIFT SPACE                &mt LEFT_COMMAND ENTER                                &lt 2 SPACE                   &mt RIGHT_SHIFT BACKSPACE
                                                                                                   &kp LEFT_ALT                          &lt 1 LA(TAB)    &lt 1 ENTER               &lt 3 RIGHT_ALT
                                                                                                   &kp LALT                              &kp LGUI         &kp LGUI                  &kp RALT
            >;
        };

        lower_layer {
            label = "lower";

            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&trans     &kp F1    &kp F2    &kp F3    &kp F4                  &kp F5                                    &kp F6                &kp F7     &kp F8     &kp F9     &kp F10   &kp F11
&kp GRAVE  &kp N1    &kp N2    &kp N3    &kp N4                  &kp N5                                    &kp N6                &kp N7     &kp N8     &kp N9     &kp N0    &kp F12
&trans     &kp EXCL  &kp AT    &kp HASH  &kp DLLR                &kp PRCNT                                 &kp CARET             &kp AMPS   &kp ASTRK  &kp LPAR   &kp RPAR  &kp PIPE
                     &kp NUBS  &trans                                                                                                       &kp MINUS  &kp EQUAL
                                         &mo RAISE               &kp SPACE                                 &kp ENTER             &mo LOWER
                                                    &kp LA(TAB)             &mo 1                &kp BSPC             &kp SPACE
                                                    &kp LALT                &kp LC(LA(RIGHT))    &kp LGUI             &kp RALT
            >;
        };

        raise_layer {
            label = "raise";

            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |       | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |       | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |       | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //                |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3               &bt BT_SEL 4                                 &kp PG_UP             &trans     &mkp MB5              &mkp MB4               &trans   &trans
&trans      &kp INS       &kp PSCRN     &kp K_CMENU   &trans                     &trans                                       &kp LEFT              &kp DOWN   &kp UP                &kp RIGHT              &trans   &trans
&trans      &kp LALT      &kp LCTRL     &kp LSHFT     &trans                     &kp CLCK                                     &kp PG_DN             &trans     &trans                &trans                 &kp DEL  &kp BSPC
                          &kp NUBS      &trans                                                                                                                 &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
                                                      &mo RAISE                  &kp SPACE                                    &kp ENTER             &mo LOWER
                                                                    &kp LA(TAB)                &mo 1                &kp BSPC             &kp SPACE
                                                                    &kp LALT                   &kp LC(LA(RIGHT))    &kp LGUI             &kp RALT
            >;
        };

        adjust_layer {
            // ----------------------------------------------------------------------------------------------------------------------------
            // | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
            // | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
            // |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
            // |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
            //                    |         |         |         |         |         | |      |      |      |       |      |

            label = "adjust";
            bindings = <
&bt BT_CLR         &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3                  &bt BT_SEL 4                                    &none                        &none                 &none                 &none       &none  &none
&ext_power EP_TOG  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI               &rgb_ug RGB_EFF                                 &kp C_PREV                   &kp C_VOL_DN          &kp C_VOL_UP          &kp C_NEXT  &none  &none
&none              &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &none            &none                         &none                                           &none                        &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &none       &none  &none
                                    &kp NUBS         &trans                                                                                                                                            &kp SPACE             &trans
                                                                      &mo RAISE                     &kp SPACE                                       &kp C_PLAY_PAUSE             &mo LOWER
                                                                                       &kp LA(TAB)                   &mo 1                &kp BSPC                    &kp SPACE
                                                                                       &kp LALT                      &kp LC(LA(RIGHT))    &kp LGUI                    &kp RALT
            >;
        };
    };
};
