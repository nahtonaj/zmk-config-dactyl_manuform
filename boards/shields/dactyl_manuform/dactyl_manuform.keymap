/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

#define WIN 0
#define MAC 1
#define GAME 2
#define FUN 3
#define NAV 4
#define MED 5

/ {

    behaviors {
        tesc: tilde_escape {
            compatible = "zmk,behavior-mod-morph";
            label = "TILDE_ESCAPE";
            #binding-cells = <0>;
            bindings = <&kp ESC>, <&kp TILDE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        windows_layer {
            bindings = <
                &tesc     &kp Q  &kp W    &kp E    &kp R    &kp T               &kp Y     &kp U   &kp I     &kp O   &kp P    &kp GRAVE
                &kp TAB   &kp A  &kp S    &kp D    &kp F    &kp G               &kp H     &kp J   &kp K     &kp L   &kp SEMI &kp SQT
                &kp LSHFT &kp Z  &kp X    &kp C    &kp V    &kp B               &kp N     &kp M   &kp COMMA &kp DOT &kp FSLH &kp BSLH
                                 &kp LBKT &kp RBKT &kp DEL  &kp BSPC            &kp SPACE &kp RET &kp MINUS &kp EQUAL
                                                   &mo FUN  &kp LCTRL           &mo NAV   &mo FUN
                                                   &kp LGUI &kp LALT            &kp MED   &kp RCTRL
            >;
        };

        mac_layer {
            bindings = <
                &tesc     &kp Q  &kp W    &kp E    &kp R    &kp T               &kp Y     &kp U   &kp I     &kp O   &kp P    &kp GRAVE
                &kp TAB   &kp A  &kp S    &kp D    &kp F    &kp G               &kp H     &kp J   &kp K     &kp L   &kp SEMI &kp SQT
                &kp LSHFT &kp Z  &kp X    &kp C    &kp V    &kp B               &kp N     &kp M   &kp COMMA &kp DOT &kp FSLH &kp BSLH
                                 &kp LBKT &kp RBKT &kp DEL  &kp BSPC            &kp SPACE &kp RET &kp MINUS &kp EQUAL
                                                   &mo FUN  &kp LGUI            &mo NAV   &mo FUN
                                                   &kp LCTRL &kp LALT           &kp MED   &kp RGUI
            >;
        };

        game_layer {
            bindings = <
                &tesc     &kp Q  &kp W    &kp E    &kp R    &kp T               &kp Y     &kp U   &kp I     &kp O   &kp P    &kp GRAVE
                &kp TAB   &kp A  &kp S    &kp D    &kp F    &kp G               &kp H     &kp J   &kp K     &kp L   &kp SEMI &kp SQT
                &kp LSHFT &kp Z  &kp X    &kp C    &kp V    &kp B               &kp N     &kp M   &kp COMMA &kp DOT &kp FSLH &kp BSLH
                                 &kp LBKT &kp RBKT &kp BSPC &kp SPACE           &kp DEL   &kp RET &kp MINUS &kp EQUAL
                                                   &mo FUN  &kp LCTRL           &mo NAV   &mo FUN
                                                   &kp LGUI &kp LALT            &kp MED   &kp RCTRL
            >;
        };

        function_layer {
            bindings = <
                &trans &kp N1    &kp N2   &kp N3   &kp N4   &kp N5              &kp N6    &kp N7  &kp N8    &kp N9  &kp N0   &trans
                &trans &kp EXCL  &kp AT   &kp HASH &kp DLLR &kp PRCNT           &trans    &kp N4  &kp N5    &kp N6  &trans   &trans
                &trans &kp CARET &kp AMPS &kp STAR &kp LPAR &kp RPAR            &trans    &kp N1  &kp N2    &kp N3  &trans   &trans
                                 &trans   &trans   &trans   &trans              &trans    &trans  &kp N0    &kp DOT
                                                   &trans   &trans              &trans    &trans
                                                   &trans   &trans              &trans    &trans
            >;
        };

        navigation_layer {
            bindings = <
                &kp F12  &kp F1 &kp F2 &kp F3 &kp F4 &kp F5               &kp F6 &kp F7   &kp F8    &kp F9    &kp F10   &kp F11
                &trans  &trans &trans &trans &trans  &trans               &trans &kp LEFT &kp UP    &kp DOWN  &kp RIGHT &trans
                &trans  &trans &trans &trans &trans  &trans               &trans &kp HOME &kp PG_UP &kp PG_DN &kp END   &trans
                               &trans &trans &trans  &trans               &trans &trans   &trans    &trans
                                             &trans  &trans               &trans &trans
                                             &trans  &trans               &trans &trans
            >;
        };

        media_layer {
            bindings = <
                &bt BT_CLR    &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3  &bt BT_SEL 4               &trans          &trans           &rgb_ug RGB_SPI  &rgb_ug RGB_SPD &trans           &trans
                &out OUT_TOG  &to WIN &to MAC &to GAME &trans  &trans                                         &kp C_PP        &kp C_NEXT       &kp C_VOL_UP     &kp C_VOL_DN    &kp C_PREV       &trans
                &trans        &trans &trans &trans &trans  &trans                                             &rgb_ug RGB_TOG &rgb_ug RGB_EFR  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD &rgb_ug RGB_EFF  &trans
                                     &trans &trans &trans  &trans               &trans &trans &trans &trans
                                                   &trans  &trans               &trans &trans
                                                   &trans  &trans               &trans &trans
            >;
        };
    };
};
